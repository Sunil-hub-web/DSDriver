Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision 22a7cf205cabbeac5bd86217f010390d9810b5a9)
+++ b/.idea/gradle.xml	(revision 6700cd0ccd3003f0850e3055f08cf2a13120cf34)
@@ -13,7 +13,6 @@
             <option value="$PROJECT_DIR$/app" />
           </set>
         </option>
-        <option name="resolveModulePerSourceSet" value="false" />
       </GradleProjectSettings>
     </option>
   </component>
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision 22a7cf205cabbeac5bd86217f010390d9810b5a9)
+++ b/app/build.gradle	(revision 6700cd0ccd3003f0850e3055f08cf2a13120cf34)
@@ -1,6 +1,7 @@
 plugins {
     id 'com.android.application'
     id 'kotlin-android'
+    id 'com.google.gms.google-services'
 }
 
 android {
@@ -9,10 +10,11 @@
 
     defaultConfig {
         applicationId "com.in.dsdriver"
-        minSdkVersion 16
+        minSdkVersion 19
         targetSdkVersion 30
-        versionCode 1
-        versionName "1.0"
+        versionCode 6
+        versionName "1.6"
+        multiDexEnabled true
 
         testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
     }
@@ -37,7 +39,10 @@
     implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
     implementation 'androidx.navigation:navigation-fragment:2.3.5'
     implementation 'androidx.navigation:navigation-ui:2.3.5'
+    //noinspection GradleDependency
     implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
+    implementation 'com.google.firebase:firebase-messaging:23.0.6'
+    implementation 'com.facebook.android:facebook-android-sdk:14.1.0'
     testImplementation 'junit:junit:4.+'
     androidTestImplementation 'androidx.test.ext:junit:1.1.3'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
Index: app/src/main/java/com/in/dsdriver/LoginPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/in/dsdriver/LoginPage.java b/app/src/main/java/com/in/dsdriver/LoginPage.java
--- a/app/src/main/java/com/in/dsdriver/LoginPage.java	(revision 22a7cf205cabbeac5bd86217f010390d9810b5a9)
+++ b/app/src/main/java/com/in/dsdriver/LoginPage.java	(revision 6700cd0ccd3003f0850e3055f08cf2a13120cf34)
@@ -1,5 +1,6 @@
 package com.in.dsdriver;
 
+import androidx.annotation.NonNull;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.appcompat.app.AppCompatDelegate;
 
@@ -7,6 +8,7 @@
 import android.app.UiModeManager;
 import android.content.Intent;
 import android.os.Bundle;
+import android.util.Log;
 import android.view.View;
 import android.widget.Button;
 import android.widget.EditText;
@@ -24,10 +26,14 @@
 import com.android.volley.toolbox.JsonObjectRequest;
 import com.android.volley.toolbox.StringRequest;
 import com.android.volley.toolbox.Volley;
+import com.google.android.gms.tasks.OnCompleteListener;
+import com.google.android.gms.tasks.Task;
+import com.google.firebase.messaging.FirebaseMessaging;
 import com.in.dsdriver.driver.drivers.ForgotPassword;
 import com.in.dsdriver.driver.drivers.HomeDeshbord;
 import com.in.dsdriver.driver.modelclass.Login_ModelClass_Driver;
 import com.in.dsdriver.extra.AppUrl;
+import com.in.dsdriver.extra.SessionManager;
 import com.in.dsdriver.extra.SharedPrefManager_Driver;
 import com.in.dsdriver.cabowner.DeshBoard;
 import com.in.dsdriver.cabowner.SharedPrefManager_Owner;
@@ -43,12 +49,16 @@
 public class LoginPage extends AppCompatActivity {
 
     Button btn_signin;
-    EditText edit_MobileNo,edit_Password;
-    String str_UserName,str_Password,selectLogintOption;
+    EditText edit_MobileNo, edit_Password;
+    String str_UserName, str_Password, selectLogintOption;
     TextView forgotPassword;
     RadioGroup radioGroup;
-    RadioButton text_Driver,text_Owner,selectedRadioButton;
+    RadioButton text_Driver, text_Owner, selectedRadioButton;
 
+    SessionManager sessionManager;
+
+    String token;
+
     private UiModeManager uiModeManager;
 
     @Override
@@ -60,6 +70,8 @@
         getSupportActionBar().hide();
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 
+        sessionManager = new SessionManager(LoginPage.this);
+
         uiModeManager = (UiModeManager) getSystemService(UI_MODE_SERVICE);
         uiModeManager.setNightMode(UiModeManager.MODE_NIGHT_NO);
 
@@ -71,49 +83,72 @@
         text_Owner = findViewById(R.id.text_Owner);
         radioGroup = findViewById(R.id.radioGroup);
 
+        FirebaseMessaging.getInstance().getToken()
+                .addOnCompleteListener(new OnCompleteListener<String>() {
+                    @Override
+                    public void onComplete(@NonNull Task<String> task) {
+
+                        if (!task.isSuccessful()) {
+                            Log.w("hgsavajshj", "Fetching FCM registration token failed", task.getException());
+                            return;
+                        }
+
+                        // Get new FCM registration token
+                        token = task.getResult();
+                        sessionManager.setFcmToken(token);
+
+
+                        // Log and toast
+                        //String msg = getString(R.string.msg_token_fmt, token);
+                        Log.d("hujasgugjgh", token);
+                        //Toast.makeText(LoginPage.this, token, Toast.LENGTH_LONG).show();
+                    }
+                });
+
         btn_signin.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
 
                 int selectedRadioButtonId = radioGroup.getCheckedRadioButtonId();
 
-                 if (selectedRadioButtonId == -1) {
+                if (selectedRadioButtonId == -1) {
 
                     Toast.makeText(LoginPage.this, "select Driver Or Owner For Login", Toast.LENGTH_SHORT).show();
 
-                }else if(edit_MobileNo.getText().toString().trim().equals("")){
+                } else if (edit_MobileNo.getText().toString().trim().equals("")) {
 
                     edit_MobileNo.setError("Fill The Details");
                     edit_MobileNo.requestFocus();
 
-                }else if(edit_MobileNo.getText().toString().trim().length()!=10){
+                } else if (edit_MobileNo.getText().toString().trim().length() != 10) {
 
                     edit_MobileNo.setError("Enter 10 Digite Mobile No");
                     edit_MobileNo.requestFocus();
 
-                }else if(edit_Password.getText().toString().trim().equals("")){
+                } else if (edit_Password.getText().toString().trim().equals("")) {
 
                     edit_Password.setError("Fill the details");
                     edit_Password.requestFocus();
 
-                }else{
+                } else {
 
                     selectedRadioButton = findViewById(selectedRadioButtonId);
                     selectLogintOption = selectedRadioButton.getText().toString();
 
-                    if(selectLogintOption.equals("Driver")){
+                    if (selectLogintOption.equals("Driver")) {
 
                         str_UserName = edit_MobileNo.getText().toString().trim();
                         str_Password = edit_Password.getText().toString().trim();
+                        String token = sessionManager.getFcmToken();
 
-                        userLogin(str_UserName,str_Password);
+                        userLogin(str_UserName, str_Password,token);
 
-                    }else{
+                    } else {
 
                         str_UserName = edit_MobileNo.getText().toString().trim();
                         str_Password = edit_Password.getText().toString().trim();
 
-                        Cab_Login(str_UserName,str_Password);
+                        Cab_Login(str_UserName, str_Password);
                     }
 
                 }
@@ -124,27 +159,37 @@
             @Override
             public void onClick(View v) {
 
-                if(selectLogintOption.equals("Driver")){
+                int selectedRadioButtonId = radioGroup.getCheckedRadioButtonId();
+
+                if (selectedRadioButtonId == -1) {
+
+                    Toast.makeText(LoginPage.this, "select Driver Or Owner For ForgotPassword", Toast.LENGTH_SHORT).show();
+
+                } else {
+
+                    selectedRadioButton = findViewById(selectedRadioButtonId);
+                    selectLogintOption = selectedRadioButton.getText().toString();
+
+                    if (selectLogintOption.equals("Driver")) {
 
-                    Intent intent = new Intent(LoginPage.this, ForgotPassword.class);
-                    intent.putExtra("Driver","Driver");
-                    startActivity(intent);
+                        Intent intent = new Intent(LoginPage.this, ForgotPassword.class);
+                        intent.putExtra("Driver", "Driver");
+                        startActivity(intent);
 
-                }else{
+                    } else {
 
-                    Intent intent = new Intent(LoginPage.this, ForgotPassword.class);
-                    intent.putExtra("Driver","CABOwner");
-                    startActivity(intent);
+                        Intent intent = new Intent(LoginPage.this, ForgotPassword.class);
+                        intent.putExtra("Driver", "CABOwner");
+                        startActivity(intent);
+                    }
                 }
-
-
-            }
-        });
+        }
+    });
 
 
-    }
+}
 
-    public void userLogin(String mobileNo,String password){
+    public void userLogin(String mobileNo, String password,String token) {
 
         ProgressDialog progressDialog = new ProgressDialog(this);
         progressDialog.setMessage("Login Please Wait....");
@@ -152,12 +197,13 @@
 
         JSONObject jsonObject = new JSONObject();
 
-        try{
+        try {
 
-            jsonObject.put("mobile",mobileNo);
-            jsonObject.put("password",password);
+            jsonObject.put("mobile", mobileNo);
+            jsonObject.put("password", password);
+            jsonObject.put("token", token);
 
-        }catch (Exception e){
+        } catch (Exception e) {
 
             e.printStackTrace();
 
@@ -172,9 +218,11 @@
                 try {
                     String status = response.getString("status");
 
-                    if(status.equals("true")){
+                    if (status.equals("true")) {
 
                         String message = response.getString("message");
+                        String shift_type = response.getString("shift_type");
+                        String driver_type = response.getString("driver_type");
 
                         Toast.makeText(LoginPage.this, message, Toast.LENGTH_SHORT).show();
 
@@ -191,7 +239,7 @@
 
                         Login_ModelClass_Driver login_modelClassDriver = new Login_ModelClass_Driver(
 
-                                user_id,name,email,mobile,status1,password
+                                user_id, name, email, mobile, status1, password, driver_type, shift_type
                         );
 
                         SharedPrefManager_Driver.getInstance(LoginPage.this).userLogin(login_modelClassDriver);
@@ -200,7 +248,7 @@
                         startActivity(intent);
 
 
-                    }else if(status.equals("false")){
+                    } else if (status.equals("false")) {
 
                         String message = response.getString("message");
 
@@ -219,17 +267,17 @@
 
                 progressDialog.dismiss();
                 error.printStackTrace();
-                Toast.makeText(LoginPage.this, ""+error, Toast.LENGTH_SHORT).show();
+                Toast.makeText(LoginPage.this, "" + error, Toast.LENGTH_SHORT).show();
             }
         });
 
-        jsonObjectRequest.setRetryPolicy(new DefaultRetryPolicy(30000,1,DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));
+        jsonObjectRequest.setRetryPolicy(new DefaultRetryPolicy(30000, 1, DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));
         RequestQueue requestQueue = Volley.newRequestQueue(this);
         requestQueue.getCache().clear();
         requestQueue.add(jsonObjectRequest);
     }
 
-    public void Cab_Login(String mobileNo,String password){
+    public void Cab_Login(String mobileNo, String password) {
 
         ProgressDialog progressDialog = new ProgressDialog(this);
         progressDialog.setMessage("Login Please Wait....");
@@ -247,7 +295,7 @@
 
                     String status = jsonObject.getString("status");
 
-                    if(status.equals("true")){
+                    if (status.equals("true")) {
 
                         String message = jsonObject.getString("message");
 
@@ -266,7 +314,7 @@
 
                         Login_ModelClass_Owner login_modelClass_owner = new Login_ModelClass_Owner(
 
-                                user_id,name,email,mobile,status1,password
+                                user_id, name, email, mobile, status1, password
                         );
 
                         SharedPrefManager_Owner.getInstance(LoginPage.this).userLogin(login_modelClass_owner);
@@ -274,7 +322,7 @@
                         Intent intent = new Intent(LoginPage.this, DeshBoard.class);
                         startActivity(intent);
 
-                    }else if(status.equals("false")){
+                    } else if (status.equals("false")) {
 
                         String message = jsonObject.getString("message");
 
@@ -286,7 +334,6 @@
                 }
 
 
-
             }
         }, new Response.ErrorListener() {
             @Override
@@ -294,23 +341,23 @@
 
                 progressDialog.dismiss();
                 error.printStackTrace();
-                Toast.makeText(LoginPage.this, ""+error, Toast.LENGTH_SHORT).show();
+                Toast.makeText(LoginPage.this, "" + error, Toast.LENGTH_SHORT).show();
             }
-        }){
+        }) {
 
             @Override
             protected Map<String, String> getParams() throws AuthFailureError {
 
-                Map<String,String> params = new HashMap<>();
+                Map<String, String> params = new HashMap<>();
 
-                params.put("mobile",mobileNo);
-                params.put("password",password);
+                params.put("mobile", mobileNo);
+                params.put("password", password);
 
                 return params;
             }
         };
 
-        stringRequest.setRetryPolicy(new DefaultRetryPolicy(30000,2,DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));
+        stringRequest.setRetryPolicy(new DefaultRetryPolicy(30000, 2, DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));
         RequestQueue requestQueue = Volley.newRequestQueue(this);
         requestQueue.getCache().clear();
         requestQueue.add(stringRequest);
@@ -333,24 +380,24 @@
     protected void onStart() {
         super.onStart();
 
-        if (SharedPrefManager_Driver.getInstance(LoginPage.this).isLoggedIn()){
+        if (SharedPrefManager_Driver.getInstance(LoginPage.this).isLoggedIn()) {
 
-            Intent intent = new Intent(LoginPage.this,HomeDeshbord.class);
+            Intent intent = new Intent(LoginPage.this, HomeDeshbord.class);
             startActivity(intent);
 
-        }else if (SharedPrefManager_Owner.getInstance(LoginPage.this).isLoggedIn()){
+        } else if (SharedPrefManager_Owner.getInstance(LoginPage.this).isLoggedIn()) {
 
-            Intent intent = new Intent(LoginPage.this,DeshBoard.class);
+            Intent intent = new Intent(LoginPage.this, DeshBoard.class);
             startActivity(intent);
         }
     }
 
-    private void setThemeDark(){
+    private void setThemeDark() {
         AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_YES);
         setContentView(R.layout.activity_splash_screen);
     }
 
-    private void setThemeLight(){
+    private void setThemeLight() {
         AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_NO);
         setContentView(R.layout.activity_splash_screen);
     }
Index: app/src/main/java/com/in/dsdriver/driver/adapter/TodayReportAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/in/dsdriver/driver/adapter/TodayReportAdapter.java b/app/src/main/java/com/in/dsdriver/driver/adapter/TodayReportAdapter.java
--- a/app/src/main/java/com/in/dsdriver/driver/adapter/TodayReportAdapter.java	(revision 22a7cf205cabbeac5bd86217f010390d9810b5a9)
+++ b/app/src/main/java/com/in/dsdriver/driver/adapter/TodayReportAdapter.java	(revision 6700cd0ccd3003f0850e3055f08cf2a13120cf34)
@@ -1,16 +1,21 @@
 package com.in.dsdriver.driver.adapter;
 
 import android.annotation.SuppressLint;
+import android.app.Dialog;
 import android.app.ProgressDialog;
 import android.content.Context;
+import android.content.Intent;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.view.Window;
+import android.widget.Button;
 import android.widget.LinearLayout;
 import android.widget.TextView;
 import android.widget.Toast;
 
 import androidx.annotation.NonNull;
+import androidx.core.content.ContextCompat;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.android.volley.DefaultRetryPolicy;
@@ -20,6 +25,7 @@
 import com.android.volley.VolleyError;
 import com.android.volley.toolbox.JsonObjectRequest;
 import com.android.volley.toolbox.Volley;
+import com.in.dsdriver.LoginPage;
 import com.in.dsdriver.R;
 import com.in.dsdriver.extra.AppUrl;
 import com.in.dsdriver.extra.SharedPrefManager_Driver;
@@ -28,9 +34,11 @@
 import org.json.JSONException;
 import org.json.JSONObject;
 
+import java.text.DateFormat;
 import java.text.ParseException;
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
+import java.util.Calendar;
 import java.util.Date;
 
 public class TodayReportAdapter extends RecyclerView.Adapter<TodayReportAdapter.ViewHolder> {
@@ -38,6 +46,7 @@
     Context context;
     ArrayList<TodayReport_ModelClass> reporttoday;
     String driverId;
+    Dialog dialog;
 
     public TodayReportAdapter(Context context, ArrayList<TodayReport_ModelClass> todayReport) {
 
@@ -62,18 +71,45 @@
 
         String reportdate = today_Report.getDate();
 
-        SimpleDateFormat fromUser = new SimpleDateFormat("yyyy-MM-dd");
+       /* SimpleDateFormat fromUser = new SimpleDateFormat("dd-MM-yyyy");
         SimpleDateFormat myFormat = new SimpleDateFormat("dd/MM/yyyy");
 
         try {
 
             Date dateFromUser = fromUser.parse(reportdate); // Parse it to the exisitng date pattern and return Date type
             String dateMyFormat = myFormat.format(dateFromUser); // format it to the date pattern you prefer
-            holder.text_Date.setText(dateMyFormat);
+            holder.text_Date.setText(today_Report.getDate());
 
         } catch (ParseException e) {
             e.printStackTrace();
+        }*/
+
+        holder.text_Date.setText(today_Report.getDate());
+
+        Calendar calendar = Calendar.getInstance();
+        Date today = calendar.getTime();
+
+        calendar.add(Calendar.DAY_OF_YEAR, 1);
+        Date tomorrow = calendar.getTime();
+
+        //DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
+
+        DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
+
+        String todayAsString = dateFormat.format(today);
+        String tomorrowAsString = dateFormat.format(tomorrow);
+
+        if(reportdate.equals(todayAsString)){
+
+            holder.text_acceptBooking.setBackgroundResource(R.drawable.reportbutton_bg);
+
+        }else if(reportdate.equals(tomorrowAsString)){
+
+            holder.text_acceptBooking.setBackgroundResource(R.drawable.back_red);
         }
+
+        System.out.println(todayAsString);
+        System.out.println(tomorrowAsString);
 
         holder.liner.setVisibility(View.VISIBLE);
         holder.liner1.setVisibility(View.VISIBLE);
@@ -84,70 +120,83 @@
         holder.liner6.setVisibility(View.VISIBLE);
         holder.liner7.setVisibility(View.VISIBLE);
 
+        String shift_type = SharedPrefManager_Driver.getInstance(context).getUser().getShift_type();
+        String driver_type = SharedPrefManager_Driver.getInstance(context).getUser().getDriver_type();
+
+        if(shift_type.equals("Full Time")){
+
+            if(driver_type.equals("Chauffer")){
 
-        if(today_Report.getDuty_type().equals("Local")){
+                if(today_Report.getDuty_type().equals("Local")){
 
-            holder.text_Locality.setText("Locality :" +" "+ today_Report.getLocality());
-            holder.text_Landmark.setText("Landmark :" +" "+ today_Report.getLandmark());
-            holder.text_BookingType.setText(today_Report.getDuty_type());
-            holder.text_Date.setText(today_Report.getDate());
-            holder.text_ReportTime.setText(today_Report.getTime());
+                    holder.text_Locality.setText("Locality :" +" "+ today_Report.getLocality());
+                    holder.text_Landmark.setText("Landmark :" +" "+ today_Report.getLandmark());
+                    holder.text_BookingType.setText(today_Report.getDuty_type());
+                    holder.text_Date.setText(today_Report.getDate());
+                    holder.text_ReportTime.setText(today_Report.getTime());
 
-            holder.text_NoofDays.setText(today_Report.getNoofDays() +" "+"Day");
-            holder.textNoofDays.setText("Day");
+                    holder.text_NoofDays.setText(today_Report.getNoofDays() +" "+"Day");
+                    holder.textNoofDays.setText("Day");
 
-            holder.text_DutyHours.setText(today_Report.getDutyHour() +" "+"Hours");
-            holder.text_Shift.setText(today_Report.getShift());
-            holder.text_DropLoc.setText(today_Report.getDrop_locality());
+                    holder.text_DutyHours.setText(today_Report.getDutyHour() +" "+"Hours");
+                    holder.text_Shift.setText(today_Report.getShift());
+                    holder.text_DropLoc.setText(today_Report.getDrop_locality());
 
-            holder.text_CarDetails.setText(today_Report.getCar_details());
-            holder.text_Remarks.setText(today_Report.getRemark());
+                    holder.text_CarDetails.setText(today_Report.getCar_details());
+                    holder.text_Remarks.setText(today_Report.getRemark());
+                    holder.text_DeliveryType.setText(today_Report.getDriver_type_name());
+                    holder.text_Date.setText(today_Report.getDate());
 
-            holder.liner7.setVisibility(View.GONE);
-            holder.liner3.setVisibility(View.GONE);
+                    holder.liner7.setVisibility(View.GONE);
+                    holder.liner3.setVisibility(View.GONE);
 
-        }else if(today_Report.getDuty_type().equals("Outstation")){
+                }
+                else if(today_Report.getDuty_type().equals("Outstation")){
 
-            holder.text_Locality.setText("Locality :" +" "+ today_Report.getLocality());
-            holder.text_Landmark.setText("Landmark :" +" "+ today_Report.getLandmark());
-            holder.text_BookingType.setText(today_Report.getDuty_type());
-            holder.text_ReportTime.setText(today_Report.getTime());
+                    holder.text_Locality.setText("Locality :" +" "+ today_Report.getLocality());
+                    holder.text_Landmark.setText("Landmark :" +" "+ today_Report.getLandmark());
+                    holder.text_BookingType.setText(today_Report.getDuty_type());
+                    holder.text_ReportTime.setText(today_Report.getTime());
 
-            holder.text_Date.setText(today_Report.getDate());
-            holder.text_NoofDays.setText(today_Report.getNoofDays());
-            holder.textNoofDays.setText("No of Days");
+                    holder.text_Date.setText(today_Report.getDate());
+                    holder.text_NoofDays.setText(today_Report.getNoofDays());
+                    holder.textNoofDays.setText("No of Days");
 
-            holder.text_ReturnDate.setText(today_Report.getReturn_date());
-            holder.text_ToCity.setText(today_Report.getTo_city());
+                    holder.text_ReturnDate.setText(today_Report.getReturn_date());
+                    holder.text_ToCity.setText(today_Report.getTo_city());
 
-            holder.text_CarDetails.setText(today_Report.getCar_details());
-            holder.text_Remarks.setText(today_Report.getRemark());
+                    holder.text_CarDetails.setText(today_Report.getCar_details());
+                    holder.text_Remarks.setText(today_Report.getRemark());
+                    holder.text_DeliveryType.setText(today_Report.getDriver_type_name());
+                    holder.text_Date.setText(today_Report.getDate());
 
-            holder.liner2.setVisibility(View.GONE);
-            holder.liner4.setVisibility(View.GONE);
-            holder.liner7.setVisibility(View.GONE);
+                    holder.liner2.setVisibility(View.GONE);
+                    holder.liner4.setVisibility(View.GONE);
+                    holder.liner7.setVisibility(View.GONE);
 
-        }else if(today_Report.getDuty_type().equals("Drop")){
+                }
+                else if(today_Report.getDuty_type().equals("Drop")){
 
-            holder.text_Locality.setText("Locality :" +" "+ today_Report.getLocality());
-            holder.text_Landmark.setText("Landmark :" +" "+ today_Report.getLandmark());
-            holder.text_BookingType.setText(today_Report.getDuty_type());
-            holder.text_Date.setText(today_Report.getDate());
-            holder.text_ReportTime.setText(today_Report.getTime());
+                    holder.text_Locality.setText("Locality :" +" "+ today_Report.getLocality());
+                    holder.text_Landmark.setText("Landmark :" +" "+ today_Report.getLandmark());
+                    holder.text_BookingType.setText(today_Report.getDuty_type());
+                    holder.text_Date.setText(today_Report.getDate());
+                    holder.text_ReportTime.setText(today_Report.getTime());
 
-            holder.text_NoofDays.setText(today_Report.getDrop_city());
-            holder.textNoofDays.setText("Drop City");
-            holder.text_Charges.setText(today_Report.getDrop_city());
+                    holder.text_NoofDays.setText(today_Report.getDrop_city());
+                    holder.textNoofDays.setText("Drop City");
+                    holder.text_Charges.setText("");
 
-            holder.text_CarDetails.setText(today_Report.getCar_details());
-            holder.text_Remarks.setText(today_Report.getRemark());
+                    holder.text_CarDetails.setText(today_Report.getCar_details());
+                    holder.text_Remarks.setText(today_Report.getRemark());
 
-            holder.textCharges.setVisibility(View.VISIBLE);
-            holder.text_Charges.setVisibility(View.VISIBLE);
+                    holder.textCharges.setVisibility(View.VISIBLE);
+                    holder.text_Charges.setVisibility(View.VISIBLE);
+                    holder.text_DeliveryType.setText(today_Report.getDriver_type_name());
 
-            holder.liner4.setVisibility(View.GONE);
-            holder.liner2.setVisibility(View.GONE);
-            holder.liner3.setVisibility(View.GONE);
+                    holder.liner4.setVisibility(View.GONE);
+                    holder.liner2.setVisibility(View.GONE);
+                    holder.liner3.setVisibility(View.GONE);
 
            /* holder.text_DutyHours.setVisibility(View.GONE);
             holder.text_Shift.setVisibility(View.GONE);
@@ -158,21 +207,324 @@
             holder.text_ReturnDate.setVisibility(View.GONE);
             holder.textReturnDate.setVisibility(View.GONE);*/
 
-        }
+                }
 
+            }else{
+
+                if(today_Report.getDriver_type_name().equals("Regular")){
+
+                    if(today_Report.getDuty_type().equals("Local")){
+
+                        holder.text_Locality.setText("Locality :" +" "+ today_Report.getLocality());
+                        holder.text_Landmark.setText("Landmark :" +" "+ today_Report.getLandmark());
+                        holder.text_BookingType.setText(today_Report.getDuty_type());
+                        holder.text_Date.setText(today_Report.getDate());
+                        holder.text_ReportTime.setText(today_Report.getTime());
+
+                        holder.text_NoofDays.setText(today_Report.getNoofDays() +" "+"Day");
+                        holder.textNoofDays.setText("Day");
+
+                        holder.text_DutyHours.setText(today_Report.getDutyHour() +" "+"Hours");
+                        holder.text_Shift.setText(today_Report.getShift());
+                        holder.text_DropLoc.setText(today_Report.getDrop_locality());
+
+                        holder.text_CarDetails.setText(today_Report.getCar_details());
+                        holder.text_Remarks.setText(today_Report.getRemark());
+                        holder.text_DeliveryType.setText(today_Report.getDriver_type_name());
+
+                        holder.liner7.setVisibility(View.GONE);
+                        holder.liner3.setVisibility(View.GONE);
+
+                    }
+                    else if(today_Report.getDuty_type().equals("Outstation")){
+
+                        holder.text_Locality.setText("Locality :" +" "+ today_Report.getLocality());
+                        holder.text_Landmark.setText("Landmark :" +" "+ today_Report.getLandmark());
+                        holder.text_BookingType.setText(today_Report.getDuty_type());
+                        holder.text_ReportTime.setText(today_Report.getTime());
+
+                        holder.text_Date.setText(today_Report.getDate());
+                        holder.text_NoofDays.setText(today_Report.getNoofDays());
+                        holder.textNoofDays.setText("No of Days");
+
+                        holder.text_ReturnDate.setText(today_Report.getReturn_date());
+                        holder.text_ToCity.setText(today_Report.getTo_city());
+
+                        holder.text_CarDetails.setText(today_Report.getCar_details());
+                        holder.text_Remarks.setText(today_Report.getRemark());
+                        holder.text_DeliveryType.setText(today_Report.getDriver_type_name());
+
+                        holder.liner2.setVisibility(View.GONE);
+                        holder.liner4.setVisibility(View.GONE);
+                        holder.liner7.setVisibility(View.GONE);
+
+                    }
+                    else if(today_Report.getDuty_type().equals("Drop")){
+
+                        holder.text_Locality.setText("Locality :" +" "+ today_Report.getLocality());
+                        holder.text_Landmark.setText("Landmark :" +" "+ today_Report.getLandmark());
+                        holder.text_BookingType.setText(today_Report.getDuty_type());
+                        holder.text_Date.setText(today_Report.getDate());
+                        holder.text_ReportTime.setText(today_Report.getTime());
+
+                        holder.text_NoofDays.setText(today_Report.getDrop_city());
+                        holder.textNoofDays.setText("Drop City");
+                        holder.text_Charges.setText("");
+
+                        holder.text_CarDetails.setText(today_Report.getCar_details());
+                        holder.text_Remarks.setText(today_Report.getRemark());
+
+                        holder.textCharges.setVisibility(View.VISIBLE);
+                        holder.text_Charges.setVisibility(View.VISIBLE);
+                        holder.text_DeliveryType.setText(today_Report.getDriver_type_name());
+
+                        holder.liner4.setVisibility(View.GONE);
+                        holder.liner2.setVisibility(View.GONE);
+                        holder.liner3.setVisibility(View.GONE);
+
+           /* holder.text_DutyHours.setVisibility(View.GONE);
+            holder.text_Shift.setVisibility(View.GONE);
+            holder.text_DropLoc.setVisibility(View.GONE);
+            holder.textDutyHours.setVisibility(View.GONE);
+            holder.textShift.setVisibility(View.GONE);
+            holder.textDropLoc.setVisibility(View.GONE);
+            holder.text_ReturnDate.setVisibility(View.GONE);
+            holder.textReturnDate.setVisibility(View.GONE);*/
+
+                    }
+                }
+            }
+
+        }
+        else{
+
+            if(driver_type.equals("Chauffer")){
+
+                if(today_Report.getShift().equals("Night")){
+
+                    if(today_Report.getDuty_type().equals("Local")){
+
+                        holder.text_Locality.setText("Locality :" +" "+ today_Report.getLocality());
+                        holder.text_Landmark.setText("Landmark :" +" "+ today_Report.getLandmark());
+                        holder.text_BookingType.setText(today_Report.getDuty_type());
+                        holder.text_Date.setText(today_Report.getDate());
+                        holder.text_ReportTime.setText(today_Report.getTime());
+
+                        holder.text_NoofDays.setText(today_Report.getNoofDays() +" "+"Day");
+                        holder.textNoofDays.setText("Day");
+
+                        holder.text_DutyHours.setText(today_Report.getDutyHour() +" "+"Hours");
+                        holder.text_Shift.setText(today_Report.getShift());
+                        holder.text_DropLoc.setText(today_Report.getDrop_locality());
+
+                        holder.text_CarDetails.setText(today_Report.getCar_details());
+                        holder.text_Remarks.setText(today_Report.getRemark());
+                        holder.text_DeliveryType.setText(today_Report.getDriver_type_name());
+
+                        holder.liner7.setVisibility(View.GONE);
+                        holder.liner3.setVisibility(View.GONE);
+
+                    }
+                    else if(today_Report.getDuty_type().equals("Outstation")){
+
+                        holder.text_Locality.setText("Locality :" +" "+ today_Report.getLocality());
+                        holder.text_Landmark.setText("Landmark :" +" "+ today_Report.getLandmark());
+                        holder.text_BookingType.setText(today_Report.getDuty_type());
+                        holder.text_ReportTime.setText(today_Report.getTime());
+
+                        holder.text_Date.setText(today_Report.getDate());
+                        holder.text_NoofDays.setText(today_Report.getNoofDays());
+                        holder.textNoofDays.setText("No of Days");
+
+                        holder.text_ReturnDate.setText(today_Report.getReturn_date());
+                        holder.text_ToCity.setText(today_Report.getTo_city());
+
+                        holder.text_CarDetails.setText(today_Report.getCar_details());
+                        holder.text_Remarks.setText(today_Report.getRemark());
+                        holder.text_DeliveryType.setText(today_Report.getDriver_type_name());
+
+                        holder.liner2.setVisibility(View.GONE);
+                        holder.liner4.setVisibility(View.GONE);
+                        holder.liner7.setVisibility(View.GONE);
+
+                    }
+                    else if(today_Report.getDuty_type().equals("Drop")){
+
+                        holder.text_Locality.setText("Locality :" +" "+ today_Report.getLocality());
+                        holder.text_Landmark.setText("Landmark :" +" "+ today_Report.getLandmark());
+                        holder.text_BookingType.setText(today_Report.getDuty_type());
+                        holder.text_Date.setText(today_Report.getDate());
+                        holder.text_ReportTime.setText(today_Report.getTime());
+
+                        holder.text_NoofDays.setText(today_Report.getDrop_city());
+                        holder.textNoofDays.setText("Drop City");
+                        holder.text_Charges.setText("");
+
+                        holder.text_CarDetails.setText(today_Report.getCar_details());
+                        holder.text_Remarks.setText(today_Report.getRemark());
+
+                        holder.textCharges.setVisibility(View.VISIBLE);
+                        holder.text_Charges.setVisibility(View.VISIBLE);
+                        holder.text_DeliveryType.setText(today_Report.getDriver_type_name());
+
+                        holder.liner4.setVisibility(View.GONE);
+                        holder.liner2.setVisibility(View.GONE);
+                        holder.liner3.setVisibility(View.GONE);
+
+           /* holder.text_DutyHours.setVisibility(View.GONE);
+            holder.text_Shift.setVisibility(View.GONE);
+            holder.text_DropLoc.setVisibility(View.GONE);
+            holder.textDutyHours.setVisibility(View.GONE);
+            holder.textShift.setVisibility(View.GONE);
+            holder.textDropLoc.setVisibility(View.GONE);
+            holder.text_ReturnDate.setVisibility(View.GONE);
+            holder.textReturnDate.setVisibility(View.GONE);*/
+
+                    }
+
+                }else{
+
+                    Toast.makeText(context, "Night Booking Is Not Avilable", Toast.LENGTH_SHORT).show();
+                }
+
+            }else{
+
+                if(today_Report.getDriver_type_name().equals("Regular")){
+
+                    if(today_Report.getShift().equals("Night")){
+
+                        if(today_Report.getDuty_type().equals("Local")){
+
+                            holder.text_Locality.setText("Locality :" +" "+ today_Report.getLocality());
+                            holder.text_Landmark.setText("Landmark :" +" "+ today_Report.getLandmark());
+                            holder.text_BookingType.setText(today_Report.getDuty_type());
+                            holder.text_Date.setText(today_Report.getDate());
+                            holder.text_ReportTime.setText(today_Report.getTime());
+
+                            holder.text_NoofDays.setText(today_Report.getNoofDays() +" "+"Day");
+                            holder.textNoofDays.setText("Day");
+
+                            holder.text_DutyHours.setText(today_Report.getDutyHour() +" "+"Hours");
+                            holder.text_Shift.setText(today_Report.getShift());
+                            holder.text_DropLoc.setText(today_Report.getDrop_locality());
+
+                            holder.text_CarDetails.setText(today_Report.getCar_details());
+                            holder.text_Remarks.setText(today_Report.getRemark());
+                            holder.text_DeliveryType.setText(today_Report.getDriver_type_name());
+
+                            holder.liner7.setVisibility(View.GONE);
+                            holder.liner3.setVisibility(View.GONE);
+
+                        }
+                        else if(today_Report.getDuty_type().equals("Outstation")){
+
+                            holder.text_Locality.setText("Locality :" +" "+ today_Report.getLocality());
+                            holder.text_Landmark.setText("Landmark :" +" "+ today_Report.getLandmark());
+                            holder.text_BookingType.setText(today_Report.getDuty_type());
+                            holder.text_ReportTime.setText(today_Report.getTime());
+
+                            holder.text_Date.setText(today_Report.getDate());
+                            holder.text_NoofDays.setText(today_Report.getNoofDays());
+                            holder.textNoofDays.setText("No of Days");
+
+                            holder.text_ReturnDate.setText(today_Report.getReturn_date());
+                            holder.text_ToCity.setText(today_Report.getTo_city());
+
+                            holder.text_CarDetails.setText(today_Report.getCar_details());
+                            holder.text_Remarks.setText(today_Report.getRemark());
+                            holder.text_DeliveryType.setText(today_Report.getDriver_type_name());
+
+                            holder.liner2.setVisibility(View.GONE);
+                            holder.liner4.setVisibility(View.GONE);
+                            holder.liner7.setVisibility(View.GONE);
+
+                        }
+                        else if(today_Report.getDuty_type().equals("Drop")){
+
+                            holder.text_Locality.setText("Locality :" +" "+ today_Report.getLocality());
+                            holder.text_Landmark.setText("Landmark :" +" "+ today_Report.getLandmark());
+                            holder.text_BookingType.setText(today_Report.getDuty_type());
+                            holder.text_Date.setText(today_Report.getDate());
+                            holder.text_ReportTime.setText(today_Report.getTime());
+
+                            holder.text_NoofDays.setText(today_Report.getDrop_city());
+                            holder.textNoofDays.setText("Drop City");
+                            holder.text_Charges.setText("");
+
+                            holder.text_CarDetails.setText(today_Report.getCar_details());
+                            holder.text_Remarks.setText(today_Report.getRemark());
+
+                            holder.textCharges.setVisibility(View.VISIBLE);
+                            holder.text_Charges.setVisibility(View.VISIBLE);
+                            holder.text_DeliveryType.setText(today_Report.getDriver_type_name());
+
+                            holder.liner4.setVisibility(View.GONE);
+                            holder.liner2.setVisibility(View.GONE);
+                            holder.liner3.setVisibility(View.GONE);
+
+           /* holder.text_DutyHours.setVisibility(View.GONE);
+            holder.text_Shift.setVisibility(View.GONE);
+            holder.text_DropLoc.setVisibility(View.GONE);
+            holder.textDutyHours.setVisibility(View.GONE);
+            holder.textShift.setVisibility(View.GONE);
+            holder.textDropLoc.setVisibility(View.GONE);
+            holder.text_ReturnDate.setVisibility(View.GONE);
+            holder.textReturnDate.setVisibility(View.GONE);*/
+
+                        }
+
+                    }else{
+
+                        Toast.makeText(context, "Night Booking Is Not Avilable", Toast.LENGTH_SHORT).show();
+                    }
+                }
+            }
+
+        }
+
+
         holder.text_acceptBooking.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
 
-                String bookingId = today_Report.getBooking_id();
+                //Show Your Another AlertDialog
+                dialog = new Dialog(context);
+                dialog.setContentView(R.layout.acceptingdialog);
+                dialog.setCancelable(false);
+                Button btn_No = dialog.findViewById(R.id.no);
+                TextView textView = dialog.findViewById(R.id.editText);
+                Button btn_Yes = dialog.findViewById(R.id.yes);
+
+                btn_Yes.setOnClickListener(new View.OnClickListener() {
+                    @Override
+                    public void onClick(View v) {
+
+                        String bookingId = today_Report.getBooking_id();
 
-                acceptBooking(driverId,bookingId);
+                        acceptBooking(driverId,bookingId);
 
-                reporttoday.remove(position);
-                notifyDataSetChanged();
-            }
-        });
+                        reporttoday.remove(position);
+                        notifyDataSetChanged();
 
+                        dialog.dismiss();
+                    }
+                });
+                btn_No.setOnClickListener(new View.OnClickListener() {
+                    @Override
+                    public void onClick(View v) {
+
+                        dialog.dismiss();
+                    }
+                });
+
+                dialog.show();
+                Window window = dialog.getWindow();
+                window.setLayout(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.WRAP_CONTENT);
+                window.setBackgroundDrawableResource(R.drawable.edittextback);
+
+            }
+        });
+
     }
 
     @Override
@@ -185,7 +537,7 @@
         TextView text_Locality,text_Landmark,textDate,text_Date,textReportTime,text_ReportTime,textBookingType,text_BookingType,
                 textNoofDays,text_NoofDays,textShift,text_Shift,textDutyHours,text_DutyHours,textReturnDate,text_ReturnDate,
                 textToCity,text_ToCity,textDropLoc,text_DropLoc,textCarDetails,text_CarDetails,textRemarks,text_Remarks,text_acceptBooking,
-                textCharges,text_Charges;
+                textCharges,text_Charges,text_DeliveryType;
 
         LinearLayout liner,liner1,liner2,liner3,liner4,liner5,liner6,liner7;
 
@@ -219,6 +571,7 @@
             text_Remarks = itemView.findViewById(R.id.text_Remarks);
             textCharges = itemView.findViewById(R.id.textCharges);
             text_Charges = itemView.findViewById(R.id.text_Charges);
+            text_DeliveryType = itemView.findViewById(R.id.text_DeliveryType);
 
             liner = itemView.findViewById(R.id.liner);
             liner1 = itemView.findViewById(R.id.liner1);
